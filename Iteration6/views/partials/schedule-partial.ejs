<!--
    copy and paste html into this file
    move css into the public folder / add to the style.css
    make sure that pathing to css works
    look into using the partial as a function to accept parameters (for DJ to get slot, for Producer to make times)
        for reference, look at navbar.ejs and home.ejs

    Author: Ramsha Kapadia
-->

<div class="grid-header">
    <h2>Master Schedule (Click DJ Box to change)</h2>
</div>
<div id="grid-container" class="grid-container">
    <div class="grid-item-header">Sun</div>
    <div class="grid-item-header">Mon</div>
    <div class="grid-item-header">Tue</div>  
    <div class="grid-item-header">Wed</div>
    <div class="grid-item-header">Thu</div>
    <div class="grid-item-header">Fri</div>  
    <div class="grid-item-header">Sat</div>
</div>

<script>
    // import { MongoClient } from "mongodb";
    
    // const uri = 'mongodb://127.0.0.1:27017/Tunity';
    // const client = new MongoClient(uri);

    document.addEventListener("DOMContentLoaded", () => {
        // Get parent div in which you want to add buttons
        const parent = document.getElementById("grid-container");
        const djs = <%- JSON.stringify(djs) %>
        // In for loop, set "i" to be lower than number length of array.
        //alert("djs length: " + djs.length);
        for(let i = 0; i < djs.length; i++) {
            // Create button node and add innerHTML (innerHTML is stuff that goes between <></> tags).
            // Since "elements" is an array, you select current iteration of it with [i]
            let button = document.createElement("button");
            //button.id = i;
            button.classList.add("grid-item-" + djs[i].djCode);
            //alert("djcode: " + djs[i].djCode);
            button.innerHTML = djs[i].djName;
            console.log("button text: " + button.innerHTML);
            button.onclick = openForm;
            parent.appendChild(button);
        }
    });

    function showCancelDialog(button) {
        button.parentElement.querySelector(".cancel-dialog").showModal();
    }

    function closeCancelDialog(button) {
        button.parentElement.closest(".cancel-dialog").close();
    }

    function cancelRequest(button) {
        button.parentElement.closest(".cancel-dialog").close();
    }

    function submitDJ() {
        console.log("submit DJ");
        var dj = document.getElementById("djcode").value;
        console.log("dj: " + dj);
        if(dj == "") {
            alert("You must input a DJ name!");
            return false;
        }
        else {
            alert("Form submitted!");
            closeForm();
            return true;
        }
    }

    function openForm() {
        document.getElementById("changeDJ").style.display = "block";
    }
    
    function closeForm() {
        console.log("close form");
        document.getElementById("changeDJ").style.display = "none";
    }
</script>

<div name="form-popup" class="form-popup" id="changeDJ">
    <form class="form-container" onsubmit="submitDJ();return false">
      <h1>Change DJ</h1>

      New DJ: <input id="djcode" type="text" name="dj">
      <input type="submit" name="submit" value="Submit">
  
      <!--<label for="dj"><b>New DJ</b></label>
      <input type="text" placeholder="Enter DJ Code" name="dj">
  
      <button id="submitdj" type="submit" class="btn" onclick="alert('Button was clicked!')">Submit</button>-->
      <button type="button" class="btn cancel" onclick="closeForm()">Close</button>
    </form>
</div>